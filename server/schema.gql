# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ChannelEntity {
  id: ID!
  name: String!
  public: Boolean!
  owner: UserEntity!
  team: TeamEntity!
  messages: [MessageEntity!]!
  created_at: DateTime!
  updated_at: DateTime!
}

input CreateChannel {
  name: String!
  published: Boolean = true
  teamId: String!
}

input CreateMember {
  userId: String!
  teamId: String!
}

input CreateMessage {
  text: String!
  channelId: String!
}

input CreateTeam {
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DeleteChannel {
  channelId: String!
}

input DeleteTeam {
  teamId: String!
}

input DestroyMember {
  userId: String!
  teamId: String!
}

input DestroyMessage {
  messageId: String!
}

input IsID {
  id: String!
}

input LoginUser {
  email: String!
  password: String!
}

type MessageEntity {
  id: ID!
  text: String!
  user: UserEntity!
  channel: ChannelEntity!
}

type Mutation {
  createChannel(data: CreateChannel!): ChannelEntity!
  updateChannel(data: UpdateChannel!): ChannelEntity!
  deleteChannel(data: DeleteChannel!): ChannelEntity!
  storeMember(data: CreateMember!): UserDTO!
  deleteMember(data: DestroyMember!): UserDTO!
  createMessage(data: CreateMessage!): MessageEntity!
  updateMessage(data: UpdateMessage!): MessageEntity!
  destroyMessage(data: DestroyMessage!): MessageEntity!
  createTeam(data: CreateTeam!): TeamEntity!
  deleteTeam(data: DeleteTeam!): TeamEntity!
  login(data: LoginUser!): UserDTO!
  register(data: RegisterUser!): UserDTO!
}

type NotificationEntity {
  id: ID!
  description: String!
  user: UserEntity!
  created_at: DateTime!
  updated_at: DateTime!
}

type Query {
  channels: [ChannelEntity!]!
  messages: [MessageEntity!]!
  teams: [TeamEntity!]!
  users: [UserEntity!]!
  me: UserDTO!
}

input RegisterUser {
  email: String!
  password: String!
  name: String!
  password_confirmation: String!
}

type Subscription {
  messageAdded: MessageEntity!
  userMentionedAtTeam: TeamEntity!
}

type TeamEntity {
  id: ID!
  name: String!
  channels: [ChannelEntity!]!
  members: [UserEntity!]!
  owner: UserEntity!
  created_at: DateTime!
  updated_at: DateTime!
}

input UpdateChannel {
  channelId: String!
  name: String!
}

input UpdateMessage {
  text: String!
  messageId: String!
}

type UserDTO {
  id: ID!
  name: String!
  email: String!
  teams: [TeamEntity!]
  channels: [ChannelEntity!]
  messages: [MessageEntity!]
  created_at: DateTime!
  updated_at: DateTime!
  auth_token: String!
}

type UserEntity {
  id: ID!
  name: String!
  email: String!
  teams: [TeamEntity!]
  channels: [ChannelEntity!]
  messages: [MessageEntity!]
  created_at: DateTime!
  updated_at: DateTime!
}
